{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{271:function(a,s,t){\"use strict\";t.r(s);var n=t(0),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[t(\"h2\",{attrs:{id:\"使用\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用\"}},[a._v(\"#\")]),a._v(\" 使用\")]),a._v(\" \"),t(\"h3\",{attrs:{id:\"_1-只卸载模块\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-只卸载模块\"}},[a._v(\"#\")]),a._v(\" 1. 只卸载模块\")]),a._v(\" \"),t(\"p\",[a._v(\"由于之前安装过，在 package.json 中的记录仍然存在\")]),a._v(\" \"),t(\"p\",[t(\"code\",[a._v(\"$ npm uninstall lodash\")])]),a._v(\" \"),t(\"h3\",{attrs:{id:\"_2-save-参数使用\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-save-参数使用\"}},[a._v(\"#\")]),a._v(\" 2. --save 参数使用\")]),a._v(\" \"),t(\"p\",[a._v(\"卸载模块的同时删除在 package.json 文件中的记录\")]),a._v(\" \"),t(\"p\",[t(\"code\",[a._v(\"$ npm uninstall lodash --save\")])]),a._v(\" \"),t(\"h3\",{attrs:{id:\"_3-卸载指定版本的模块\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-卸载指定版本的模块\"}},[a._v(\"#\")]),a._v(\" 3. 卸载指定版本的模块\")]),a._v(\" \"),t(\"p\",[t(\"code\",[a._v(\"$ npm uninstall lodash@3.*\")]),a._v(\" // 卸载 lodash 模块 3.* 版本\")]),a._v(\" \"),t(\"h3\",{attrs:{id:\"_4-应用场景\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-应用场景\"}},[a._v(\"#\")]),a._v(\" 4. 应用场景\")]),a._v(\" \"),t(\"p\",[a._v(\"dk 在项目中先安装了 lodash 4.17.4 版本的模块；\\n后来发现这个版本太高，存在一些新 bug 没有解决，不适合项目中使用；\\ndk 想要安装版本更加稳定的3.* 版本， 于是敲入指令 $ npm install lodash@3.\"),t(\"em\",[a._v(\"；\\n到这里就注意了，虽然第二次安装了 3.\")]),a._v(\" 版本，但是由于之前的 4.* 版本并没有卸载，\\n此时在本地安装路径中可以发现有两个版本 lodash 的模块，\\n而 npm 默认在使用时会优先调用高版本的模块。\")]),a._v(\" \"),t(\"p\",[a._v(\"这时将之前版本进行卸载，$ npm install lodash，会默认卸载高版本的模块。\")])])}),[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}