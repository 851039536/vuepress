{"remainingRequest":"c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\docs\\softskill\\VsCode\\1.md?vue&type=template&id=365742f3&","dependencies":[{"path":"c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\docs\\softskill\\VsCode\\1.md","mtime":1577153479731},{"path":"c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"c:\\Users\\CH190006\\Desktop\\Test\\VUE\\sn-vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}